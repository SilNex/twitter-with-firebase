{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","class","icon","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetsArray","docs","map","data","marginTop","key","Navigation","display","justifyContent","to","marginRight","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","autoFocus","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1d792a9.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGEIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\n\nexport const dbService = firebase.firestore();\n\nexport const storageService = firebase.storage();\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(\n          email,\n          password\n        );\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create Account\" : \"Log In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In.\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n\n    const data = await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button onClick={onSocialClick} name=\"google\">\n          Countinue with Google\n        </button>\n        <button onClick={onSocialClick} name=\"github\">\n          Countinue with Github\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are You sure you want to delete this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      nweetObj.attachmentUrl &&\n        (await storageService.refFromURL(nweetObj.attachmentUrl).delete());\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          {isOwner && (\n            <>\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input\n                  text=\"text\"\n                  placeholder=\"Edit your nweet\"\n                  value={newNweet}\n                  onChange={onChange}\n                  required\n                />\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n              </form>\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                Cancel\n              </span>\n            </>\n          )}\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <>\n              <div class=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                  <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n              </div>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (nweet === \"\") {\n      return;\n    }\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;\n","import Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n      const nweetsArray = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetsArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div style={{ marginTop: 30 }}>\n        <NweetFactory userObj={userObj} />\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display Name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"components/Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}